import { e as createStaticVNode } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="use-attrs" tabindex="-1"><a class="header-anchor" href="#use-attrs" aria-hidden="true">#</a> use-attrs</h1><h2 id="attrs-\u4E0E-attrs" tabindex="-1"><a class="header-anchor" href="#attrs-\u4E0E-attrs" aria-hidden="true">#</a> $attrs \u4E0E attrs</h2><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n  <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[\n     ...\n      $attrs.class\n    ]<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$attrs.style<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attrs<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attrs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>attrs \u4E3B\u8981\u662F\u8FD4\u56DE \u9664\u4E86 class\u3001style \u53CA\u5176\u4ED6\u4E8B\u4EF6\u7684\u5C5E\u6027\u3002</p><h2 id="use-attrs-1" tabindex="-1"><a class="header-anchor" href="#use-attrs-1" aria-hidden="true">#</a> use-attrs</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> fromPairs <span class="token keyword">from</span> <span class="token string">&#39;lodash/fromPairs&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> debugWarn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@element-plus/utils/error&#39;</span>\n\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> ComputedRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Params</span> <span class="token punctuation">{</span>\n  excludeListeners<span class="token operator">?</span><span class="token operator">:</span> boolean\n  excludeKeys<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token constant">DEFAULT_EXCLUDE_KEYS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> <span class="token constant">LISTENER_PREFIX</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^on[A-Z]</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> Params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> unknown<span class="token operator">&gt;&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> excludeListeners <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> excludeKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> params\n  <span class="token keyword">const</span> allExcludeKeys <span class="token operator">=</span> excludeKeys<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_EXCLUDE_KEYS</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">debugWarn</span><span class="token punctuation">(</span>\n      <span class="token string">&#39;use-attrs&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function&#39;</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n    <span class="token function">fromPairs</span><span class="token punctuation">(</span>\n      Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>proxy<span class="token operator">?.</span>$attrs<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n        <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n          <span class="token operator">!</span>allExcludeKeys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n          <span class="token operator">!</span><span class="token punctuation">(</span>excludeListeners <span class="token operator">&amp;&amp;</span> <span class="token constant">LISTENER_PREFIX</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>', 6);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var useAttrs_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { useAttrs_html as default };
