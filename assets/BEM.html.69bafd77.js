import { e as createStaticVNode } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="bem" tabindex="-1"><a class="header-anchor" href="#bem" aria-hidden="true">#</a> BEM</h1><p>\u5728 <code>theme-chalk/src/mixins/config.scss</code> \u6587\u4EF6\u4E2D\uFF0C\u6709\u5BF9elment ui\u98CE\u683C\u7684\u57FA\u7840\u914D\u7F6E\u3002</p><div class="language-scss ext-scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$namespace</span></span><span class="token punctuation">:</span> <span class="token string">&#39;el&#39;</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$common-separator</span></span><span class="token punctuation">:</span> <span class="token string">&#39;-&#39;</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$element-separator</span></span><span class="token punctuation">:</span> <span class="token string">&#39;__&#39;</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$modifier-separator</span></span><span class="token punctuation">:</span> <span class="token string">&#39;--&#39;</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$state-prefix</span></span><span class="token punctuation">:</span> <span class="token string">&#39;is-&#39;</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n</code></pre></div><p>\u5728 <code>theme-chalk/src/mixins/mixins.scss</code> \u4E2D\uFF0C\u5219\u5B9A\u4E49\u4E86BEM\u7684\u6DF7\u5408\u65B9\u6CD5\u3002</p><div class="language-scss ext-scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    \n  <span class="token property"><span class="token variable">$B</span></span><span class="token punctuation">:</span> <span class="token variable">$namespace</span>+<span class="token string">&#39;-&#39;</span>+<span class="token variable">$block</span> !global<span class="token punctuation">;</span>\n\n  <span class="token selector">.<span class="token variable">#{$B}</span> </span><span class="token punctuation">{</span>\n    <span class="token keyword">@content</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">@mixin</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token variable">$element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property"><span class="token variable">$E</span></span><span class="token punctuation">:</span> <span class="token variable">$element</span> !global<span class="token punctuation">;</span>\n  <span class="token property"><span class="token variable">$selector</span></span><span class="token punctuation">:</span> &amp;<span class="token punctuation">;</span>\n  <span class="token property"><span class="token variable">$currentSelector</span></span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$unit</span> in <span class="token variable">$element</span> </span><span class="token punctuation">{</span>\n    <span class="token property"><span class="token variable">$currentSelector</span></span><span class="token punctuation">:</span> #<span class="token punctuation">{</span><span class="token variable">$currentSelector</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> <span class="token variable">$B</span> <span class="token operator">+</span> <span class="token variable">$element-separator</span> <span class="token operator">+</span> <span class="token variable">$unit</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">@if</span> <span class="token function">hitAllSpecialNestRule</span><span class="token punctuation">(</span><span class="token variable">$selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token atrule"><span class="token rule">@at-root</span></span> <span class="token punctuation">{</span>\n      <span class="token selector"><span class="token variable">#{$selector}</span> </span><span class="token punctuation">{</span>\n        <span class="token selector"><span class="token variable">#{$currentSelector}</span> </span><span class="token punctuation">{</span>\n          <span class="token keyword">@content</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span>\n    <span class="token atrule"><span class="token rule">@at-root</span></span> <span class="token punctuation">{</span>\n      <span class="token selector"><span class="token variable">#{$currentSelector}</span> </span><span class="token punctuation">{</span>\n        <span class="token keyword">@content</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">@mixin</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token variable">$modifier</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property"><span class="token variable">$selector</span></span><span class="token punctuation">:</span> &amp;<span class="token punctuation">;</span>\n  <span class="token property"><span class="token variable">$currentSelector</span></span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$unit</span> in <span class="token variable">$modifier</span> </span><span class="token punctuation">{</span>\n    <span class="token property"><span class="token variable">$currentSelector</span></span><span class="token punctuation">:</span> #<span class="token punctuation">{</span><span class="token variable">$currentSelector</span> <span class="token operator">+</span> &amp; <span class="token operator">+</span> <span class="token variable">$modifier-separator</span> <span class="token operator">+</span> <span class="token variable">$unit</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token atrule"><span class="token rule">@at-root</span></span> <span class="token punctuation">{</span>\n    <span class="token selector"><span class="token variable">#{$currentSelector}</span> </span><span class="token punctuation">{</span>\n      <span class="token keyword">@content</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>', 5);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var BEM_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { BEM_html as default };
