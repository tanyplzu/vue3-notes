import { r as resolveComponent, c as createElementBlock, a as createBaseVNode, b as createVNode, F as Fragment, e as createStaticVNode, d as createTextVNode, o as openBlock } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="jsx" tabindex="-1"><a class="header-anchor" href="#jsx" aria-hidden="true">#</a> JSX</h1><p>\u4EE5\u4E00\u4E2A elform</p><h2 id="\u5728-render-\u4E2D\u8FD4\u56DE" tabindex="-1"><a class="header-anchor" href="#\u5728-render-\u4E2D\u8FD4\u56DE" aria-hidden="true">#</a> \u5728 render \u4E2D\u8FD4\u56DE</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> ElForm <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> slots<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> expose <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formProps <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;formProps&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> formRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">validate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> formRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">resetFields</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> formRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">resetFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      validate<span class="token punctuation">,</span>\n      resetFields<span class="token punctuation">,</span>\n      formRef<span class="token punctuation">,</span>\n      attrs<span class="token punctuation">,</span>\n      formProps<span class="token punctuation">,</span>\n      slots<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> formRef<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> formProps<span class="token punctuation">,</span> slots <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">&#39;formRef&#39;</span> <span class="token punctuation">{</span><span class="token operator">...</span>attrs<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>formProps<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n        <span class="token punctuation">{</span>slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="\u5728-setup-\u4E2D\u8FD4\u56DE" tabindex="-1"><a class="header-anchor" href="#\u5728-setup-\u4E2D\u8FD4\u56DE" aria-hidden="true">#</a> \u5728 setup \u4E2D\u8FD4\u56DE</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> ElForm <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> slots<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> expose <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formProps <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;formProps&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> formRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token punctuation">{</span>formRef<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>attrs<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>formProps<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n        <span class="token punctuation">{</span>slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7528\u6CD5" aria-hidden="true">#</a> \u7528\u6CD5</h2><ul><li>render \u4E2D\u53EF\u4EE5\u901A\u8FC7 this \u8BBF\u95EE\u5F53\u524D Vue \u5B9E\u4F8B;</li><li>setup \u4E2D\u8BBF\u95EE\u4E0D\u5230 this;</li><li>\u6587\u4EF6\u540D\u53EF\u4EE5\u5199\u6210<code>.js</code>\u6216<code>.jsx</code>;</li><li>\u5982\u679C\u5199\u6210<code>.vue</code>, \u9700\u8981<code>&lt;script&gt;</code> \u6807\u7B7E\u589E\u52A0 <code>lang=&quot;jsx&quot;</code> \u8BBE\u7F6E;</li></ul><h2 id="\u9605\u8BFB\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u9605\u8BFB\u53C2\u8003" aria-hidden="true">#</a> \u9605\u8BFB\u53C2\u8003</h2>', 9);
const _hoisted_10 = {
  href: "https://github.com/vuejs/babel-plugin-jsx#syntax",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_11 = /* @__PURE__ */ createTextVNode("vuejs/babel-plugin-jsx");
const _hoisted_12 = {
  href: "https://www.jiangweishan.com/article/vuejs20210715a3.html",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_13 = /* @__PURE__ */ createTextVNode("\u5728 vue3 \u4E2D\u7F16\u5199 jsx \u7684\u4E24\u79CD\u65B9\u5F0F");
const _hoisted_14 = {
  href: "https://juejin.cn/post/6911175470255964174",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_15 = /* @__PURE__ */ createTextVNode("\u4E3A\u4EC0\u4E48\u6211\u63A8\u8350\u4F7F\u7528JSX\u5F00\u53D1Vue3");
function _sfc_render(_ctx, _cache) {
  const _component_OutboundLink = resolveComponent("OutboundLink");
  return openBlock(), createElementBlock(Fragment, null, [
    _hoisted_1,
    createBaseVNode("ul", null, [
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_10, [
          _hoisted_11,
          createVNode(_component_OutboundLink)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_12, [
          _hoisted_13,
          createVNode(_component_OutboundLink)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_14, [
          _hoisted_15,
          createVNode(_component_OutboundLink)
        ])
      ])
    ])
  ], 64);
}
var JSX_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { JSX_html as default };
