import { e as createStaticVNode } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> computed</h1><nav class="table-of-contents"><ul></ul></nav><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token parameter">getterOrOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// getter \u51FD\u6570</span>\n  <span class="token keyword">let</span> getter<span class="token punctuation">;</span>\n  <span class="token comment">// setter \u51FD\u6570</span>\n  <span class="token keyword">let</span> setter<span class="token punctuation">;</span>\n  <span class="token comment">// \u6807\u51C6\u5316\u53C2\u6570</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>getterOrOptions<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u8868\u9762\u4F20\u5165\u7684\u662F getter \u51FD\u6570\uFF0C\u4E0D\u80FD\u4FEE\u6539\u8BA1\u7B97\u5C5E\u6027\u7684\u503C</span>\n    getter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">;</span>\n    setter <span class="token operator">=</span>\n      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span>\n        <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Write operation failed: computed value is readonly&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token operator">:</span> <span class="token constant">NOOP</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    getter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>get<span class="token punctuation">;</span>\n    setter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">.</span>set<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// \u6570\u636E\u662F\u5426\u810F\u7684</span>\n  <span class="token keyword">let</span> dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token comment">// \u8BA1\u7B97\u7ED3\u679C</span>\n  <span class="token keyword">let</span> value<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> computed<span class="token punctuation">;</span>\n  <span class="token comment">// \u521B\u5EFA\u526F\u4F5C\u7528\u51FD\u6570</span>\n  <span class="token keyword">const</span> runner <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u5EF6\u65F6\u6267\u884C</span>\n    lazy<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// \u6807\u8BB0\u8FD9\u662F\u4E00\u4E2A computed effect \u7528\u4E8E\u5728 trigger \u9636\u6BB5\u7684\u4F18\u5148\u7EA7\u6392\u5E8F</span>\n    computed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// \u8C03\u5EA6\u6267\u884C\u7684\u5B9E\u73B0</span>\n    <span class="token function-variable function">scheduler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token comment">// \u6D3E\u53D1\u901A\u77E5\uFF0C\u901A\u77E5\u8FD0\u884C\u8BBF\u95EE\u8BE5\u8BA1\u7B97\u5C5E\u6027\u7684 activeEffect</span>\n        <span class="token function">trigger</span><span class="token punctuation">(</span>computed<span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span> <span class="token comment">/* SET */</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// \u521B\u5EFA computed \u5BF9\u8C61</span>\n  computed <span class="token operator">=</span> <span class="token punctuation">{</span>\n    __v_isRef<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// \u66B4\u9732 effect \u5BF9\u8C61\u4EE5\u4FBF\u8BA1\u7B97\u5C5E\u6027\u53EF\u4EE5\u505C\u6B62\u8BA1\u7B97</span>\n    effect<span class="token operator">:</span> runner<span class="token punctuation">,</span>\n    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// \u8BA1\u7B97\u5C5E\u6027\u7684 getter</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// \u53EA\u6709\u6570\u636E\u4E3A\u810F\u7684\u65F6\u5019\u624D\u4F1A\u91CD\u65B0\u8BA1\u7B97</span>\n        value <span class="token operator">=</span> <span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// \u4F9D\u8D56\u6536\u96C6\uFF0C\u6536\u96C6\u8FD0\u884C\u8BBF\u95EE\u8BE5\u8BA1\u7B97\u5C5E\u6027\u7684 activeEffect</span>\n      <span class="token function">track</span><span class="token punctuation">(</span>computed<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span> <span class="token comment">/* GET */</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// \u8BA1\u7B97\u5C5E\u6027\u7684 setter</span>\n      <span class="token function">setter</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> computed<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>computed \u8BA1\u7B97\u5C5E\u6027\u6709\u4E24\u4E2A\u7279\u70B9\uFF1A</p><ul><li>\u5EF6\u65F6\u8BA1\u7B97\uFF0C\u53EA\u6709\u5F53\u6211\u4EEC\u8BBF\u95EE\u8BA1\u7B97\u5C5E\u6027\u7684\u65F6\u5019\uFF0C\u5B83\u624D\u4F1A\u771F\u6B63\u8FD0\u884C computed getter \u51FD\u6570\u8BA1\u7B97\uFF1B</li><li>\u7F13\u5B58\uFF0C\u5B83\u7684\u5185\u90E8\u4F1A\u7F13\u5B58\u4E0A\u6B21\u7684\u8BA1\u7B97\u7ED3\u679C value\uFF0C\u800C\u4E14\u53EA\u6709 dirty \u4E3A true \u65F6\u624D\u4F1A\u91CD\u65B0\u8BA1\u7B97\u3002\u5982\u679C\u8BBF\u95EE\u8BA1\u7B97\u5C5E\u6027\u65F6 dirty \u4E3A false\uFF0C\u90A3\u4E48\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2A value\u3002</li></ul><p>\u8BA1\u7B97\u5C5E\u6027\u7684\u4F18\u52BF\u662F\uFF1A\u53EA\u8981\u4F9D\u8D56\u4E0D\u53D8\u5316\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u7F13\u5B58\u7684 value \u800C\u4E0D\u7528\u6BCF\u6B21\u5728\u6E32\u67D3\u7EC4\u4EF6\u7684\u65F6\u5019\u90FD\u6267\u884C\u51FD\u6570\u53BB\u8BA1\u7B97\uFF0C\u8FD9\u662F\u5178\u578B\u7684\u7A7A\u95F4\u6362\u65F6\u95F4\u7684\u4F18\u5316\u601D\u60F3\u3002</p>', 6);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var computed_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { computed_html as default };
