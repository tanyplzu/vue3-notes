import { e as createStaticVNode } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="indexhtmlmiddleware" tabindex="-1"><a class="header-anchor" href="#indexhtmlmiddleware" aria-hidden="true">#</a> indexHtmlMiddleware</h1><h2 id="indexhtml" tabindex="-1"><a class="header-anchor" href="#indexhtml" aria-hidden="true">#</a> indexHtml</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">indexHtmlMiddleware</span><span class="token punctuation">(</span>\n  <span class="token parameter">server<span class="token operator">:</span> ViteDevServer</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> Connect<span class="token punctuation">.</span>NextHandleFunction <span class="token punctuation">{</span>\n  <span class="token comment">// Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`</span>\n  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">viteIndexHtmlMiddleware</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token function">cleanUrl</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// spa-fallback always redirects to /index.html</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token operator">?.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.html&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;sec-fetch-dest&#39;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token function">getHtmlFilename</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> server<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> html <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        html <span class="token operator">=</span> <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">transformIndexHtml</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> html<span class="token punctuation">,</span> req<span class="token punctuation">.</span>originalUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> html<span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>Vite \u5C06 <code>index.html</code> \u89C6\u4E3A\u6E90\u7801\u548C\u6A21\u5757\u56FE\u7684\u4E00\u90E8\u5206\u3002Vite \u89E3\u6790 <code>&lt;script type=&quot;module&quot; src=&quot;...&quot;&gt;</code> \uFF0C\u8FD9\u4E2A\u6807\u7B7E\u6307\u5411\u4F60\u7684 JavaScript \u6E90\u7801\u3002\u751A\u81F3\u5185\u8054\u5F15\u5165 JavaScript \u7684 <code>&lt;script type=&quot;module&quot; src=&quot;...&quot;&gt;</code> \u548C\u5F15\u7528 CSS \u7684 <code>&lt;link href&gt;</code> \u4E5F\u80FD\u5229\u7528 Vite \u7279\u6709\u7684\u529F\u80FD\u88AB\u89E3\u6790\u3002\u53E6\u5916\uFF0C<code>index.html</code> \u4E2D\u7684 URL \u5C06\u88AB\u81EA\u52A8\u8F6C\u6362\uFF0C\u56E0\u6B64\u4E0D\u518D\u9700\u8981 <code>%PUBLIC_URL%</code> \u5360\u4F4D\u7B26\u4E86\u3002</p></blockquote><p>\u5176\u4E2D\u7684 <code>server.transformIndexHtml</code> \u5C31\u662F <code>createDevHtmlTransformFn</code></p><h2 id="createdevhtmltransformfn" tabindex="-1"><a class="header-anchor" href="#createdevhtmltransformfn" aria-hidden="true">#</a> createDevHtmlTransformFn</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createDevHtmlTransformFn</span><span class="token punctuation">(</span>\n  <span class="token parameter">server<span class="token operator">:</span> ViteDevServer</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token operator">:</span> string<span class="token punctuation">,</span> html<span class="token operator">:</span> string<span class="token punctuation">,</span> originalUrl<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>preHooks<span class="token punctuation">,</span> postHooks<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">resolveHtmlTransforms</span><span class="token punctuation">(</span>server<span class="token punctuation">.</span>config<span class="token punctuation">.</span>plugins<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> string<span class="token punctuation">,</span> html<span class="token operator">:</span> string<span class="token punctuation">,</span> originalUrl<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">applyHtmlTransforms</span><span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>preHooks<span class="token punctuation">,</span> devHtmlHook<span class="token punctuation">,</span> <span class="token operator">...</span>postHooks<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> url<span class="token punctuation">,</span>\n      filename<span class="token operator">:</span> <span class="token function">getHtmlFilename</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> server<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      server<span class="token punctuation">,</span>\n      originalUrl<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>', 7);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var indexHtmlMiddleware_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { indexHtmlMiddleware_html as default };
