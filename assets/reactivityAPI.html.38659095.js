import { r as resolveComponent, c as createElementBlock, a as createBaseVNode, b as createVNode, w as withCtx, F as Fragment, d as createTextVNode, e as createStaticVNode, o as openBlock } from "./app.f1ef7422.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.5a098b48.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createBaseVNode("h1", {
  id: "\u54CD\u5E94\u5F0F\u7CFB\u7EDF-api",
  tabindex: "-1"
}, [
  /* @__PURE__ */ createBaseVNode("a", {
    class: "header-anchor",
    href: "#\u54CD\u5E94\u5F0F\u7CFB\u7EDF-api",
    "aria-hidden": "true"
  }, "#"),
  /* @__PURE__ */ createTextVNode(" \u54CD\u5E94\u5F0F\u7CFB\u7EDF API")
], -1);
const _hoisted_2 = { class: "table-of-contents" };
const _hoisted_3 = /* @__PURE__ */ createTextVNode("reactive");
const _hoisted_4 = /* @__PURE__ */ createTextVNode("ref");
const _hoisted_5 = /* @__PURE__ */ createTextVNode("computed");
const _hoisted_6 = /* @__PURE__ */ createTextVNode("\u7528\u6CD5");
const _hoisted_7 = /* @__PURE__ */ createTextVNode("watch");
const _hoisted_8 = /* @__PURE__ */ createTextVNode("\u89C2\u5BDF props");
const _hoisted_9 = /* @__PURE__ */ createTextVNode("\u89C2\u5BDF\u5305\u88C5\u5BF9\u8C61");
const _hoisted_10 = /* @__PURE__ */ createTextVNode("\u89C2\u5BDF\u591A\u4E2A\u6570\u636E\u6E90");
const _hoisted_11 = /* @__PURE__ */ createTextVNode("\u505C\u6B62\u89C2\u5BDF");
const _hoisted_12 = /* @__PURE__ */ createTextVNode("\u6E05\u7406\u526F\u4F5C\u7528");
const _hoisted_13 = /* @__PURE__ */ createTextVNode("watchEffect");
const _hoisted_14 = /* @__PURE__ */ createTextVNode("watch \u548C watchEffect \u7684\u533A\u522B");
const _hoisted_15 = /* @__PURE__ */ createTextVNode("effect");
const _hoisted_16 = /* @__PURE__ */ createTextVNode("\u8C03\u5EA6\u6267\u884C effect-scheduler");
const _hoisted_17 = /* @__PURE__ */ createTextVNode("watchEffect() \u4E0E effect() \u7684\u533A\u522B");
const _hoisted_18 = /* @__PURE__ */ createStaticVNode('<h2 id="reactive" tabindex="-1"><a class="header-anchor" href="#reactive" aria-hidden="true">#</a> reactive</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> ref</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      count<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> computed</h2><h3 id="\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7528\u6CD5" aria-hidden="true">#</a> \u7528\u6CD5</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;\u5341\u4E09&#39;</span><span class="token punctuation">,</span>\n      desc<span class="token operator">:</span> <span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> state<span class="token punctuation">.</span>name <span class="token operator">+</span> state<span class="token punctuation">.</span>desc<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      text<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plusOne<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\nplusOne<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// error</span>\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plusOne<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>\n</code></pre></div><blockquote><p>\u76F4\u63A5\u4FEE\u6539 plusOne.value \u4F1A\u62A5\u4E00\u4E2A\u9519\u8BEF\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5982\u679C\u6211\u4EEC\u4F20\u9012\u7ED9 computed \u7684\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD9\u5C31\u662F\u4E00\u4E2A getter \u51FD\u6570\uFF0C\u6211\u4EEC\u53EA\u80FD\u83B7\u53D6\u5B83\u7684\u503C\uFF0C\u800C\u4E0D\u80FD\u76F4\u63A5\u4FEE\u6539\u5B83\u3002</p></blockquote><p>\u6709\u65F6\u5019\u6211\u4EEC\u4E5F\u5E0C\u671B\u80FD\u591F\u76F4\u63A5\u4FEE\u6539 computed \u7684\u8FD4\u56DE\u503C\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u7ED9 computed \u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\uFF1A</p><p>computed \u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F5C\u4E3A setter \u6765\u521B\u5EFA</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> writableComputed <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span>\n  <span class="token comment">// read</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token comment">// write</span>\n  <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    count<span class="token punctuation">.</span>value <span class="token operator">=</span> val <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nwritableComputed<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n</code></pre></div><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h2><p>watch() \u63A5\u6536\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u88AB\u79F0\u4F5C \u201C\u6570\u636E\u6E90\u201D\uFF0C\u5B83\u53EF\u4EE5\u662F\uFF1A</p><ul><li>\u4E00\u4E2A\u8FD4\u56DE\u4EFB\u610F\u503C\u7684\u51FD\u6570</li><li>\u4E00\u4E2A\u5305\u88C5\u5BF9\u8C61</li><li>\u4E00\u4E2A\u5305\u542B\u4E0A\u8FF0\u4E24\u79CD\u6570\u636E\u6E90\u7684\u6570\u7EC4</li></ul><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u56DE\u8C03\u51FD\u6570\u3002\u56DE\u8C03\u51FD\u6570\u53EA\u6709\u5F53\u6570\u636E\u6E90\u53D1\u751F\u53D8\u52A8\u65F6\u624D\u4F1A\u88AB\u89E6\u53D1\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token comment">// getter</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token comment">// callback</span>\n  <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;count + 1 is: &#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// -&gt; count + 1 is: 1</span>\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token comment">// -&gt; count + 1 is: 2</span>\n</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      search<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">watch</span><span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> state<span class="token punctuation">.</span>search<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token parameter">nextData<span class="token punctuation">,</span> preData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;preData&#39;</span><span class="token punctuation">,</span> preData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextData&#39;</span><span class="token punctuation">,</span> nextData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>search <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">,</span>\n      handleSearch<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="\u89C2\u5BDF-props" tabindex="-1"><a class="header-anchor" href="#\u89C2\u5BDF-props" aria-hidden="true">#</a> \u89C2\u5BDF props</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> MyComponent <span class="token operator">=</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> Number<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">watch</span><span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n      <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        data<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchData</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="\u89C2\u5BDF\u5305\u88C5\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u89C2\u5BDF\u5305\u88C5\u5BF9\u8C61" aria-hidden="true">#</a> \u89C2\u5BDF\u5305\u88C5\u5BF9\u8C61</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// double \u662F\u4E00\u4E2A\u8BA1\u7B97\u5305\u88C5\u5BF9\u8C61</span>\n<span class="token keyword">const</span> double <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">watch</span><span class="token punctuation">(</span>double<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;double the count is: &#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -&gt; double the count is: 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// -&gt; double the count is: 2</span>\n</code></pre></div><h3 id="\u89C2\u5BDF\u591A\u4E2A\u6570\u636E\u6E90" tabindex="-1"><a class="header-anchor" href="#\u89C2\u5BDF\u591A\u4E2A\u6570\u636E\u6E90" aria-hidden="true">#</a> \u89C2\u5BDF\u591A\u4E2A\u6570\u636E\u6E90</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>refA<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> refB<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>prevA<span class="token punctuation">,</span> prevB<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">a is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">b is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="\u505C\u6B62\u89C2\u5BDF" tabindex="-1"><a class="header-anchor" href="#\u505C\u6B62\u89C2\u5BDF" aria-hidden="true">#</a> \u505C\u6B62\u89C2\u5BDF</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> stop <span class="token operator">=</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>\n<span class="token comment">// stop watching</span>\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u7EC4\u4EF6\u9500\u6BC1\u65F6\u4E5F\u4F1A\u88AB\u81EA\u52A8\u505C\u6B62</span>\n    <span class="token function">watch</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="\u6E05\u7406\u526F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u6E05\u7406\u526F\u4F5C\u7528" aria-hidden="true">#</a> \u6E05\u7406\u526F\u4F5C\u7528</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>idValue<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> oldId<span class="token punctuation">,</span> onCleanup</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">performAsyncOperation</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">onCleanup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// id \u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u6216\u662F watcher \u5373\u5C06\u88AB\u505C\u6B62.</span>\n    <span class="token comment">// \u53D6\u6D88\u8FD8\u672A\u5B8C\u6210\u7684\u5F02\u6B65\u64CD\u4F5C\u3002</span>\n    token<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>\u867D\u7136\u8BA1\u7B97\u5C5E\u6027\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u66F4\u5408\u9002\uFF0C\u4F46\u6709\u65F6\u4E5F\u9700\u8981\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u4FA6\u542C\u5668\u3002\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48 Vue \u901A\u8FC7 watch \u9009\u9879\u63D0\u4F9B\u4E86\u4E00\u4E2A\u66F4\u901A\u7528\u7684\u65B9\u6CD5\uFF0C\u6765\u54CD\u5E94\u6570\u636E\u7684\u53D8\u5316\u3002\u5F53\u9700\u8981\u5728\u6570\u636E\u53D8\u5316\u65F6\u6267\u884C\u5F02\u6B65\u6216\u5F00\u9500\u8F83\u5927\u7684\u64CD\u4F5C\u65F6\uFF0C\u8FD9\u4E2A\u65B9\u5F0F\u662F\u6700\u6709\u7528\u7684\u3002</p><h2 id="watcheffect" tabindex="-1"><a class="header-anchor" href="#watcheffect" aria-hidden="true">#</a> watchEffect</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      search<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\u76D1\u542C\u67E5\u8BE2\u5B57\u6BB5</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>state<span class="token punctuation">.</span>search<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>search <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">,</span>\n      handleSearch<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="watch-\u548C-watcheffect-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#watch-\u548C-watcheffect-\u7684\u533A\u522B" aria-hidden="true">#</a> watch \u548C watchEffect \u7684\u533A\u522B</h3><ul><li>\u4E24\u8005\u90FD\u53EF\u4EE5\u76D1\u542C data \u5C5E\u6027</li><li>watch \u9700\u8981\u660E\u786E\u53EA\u77E5\u9053\u76D1\u542C\u90A3\u4E2A\u5C5E\u6027</li><li>watchEffect \u4F1A\u6839\u636E\u5176\u5C5E\u6027\u81EA\u52A8\u76D1\u542C\u5176\u53D8\u5316</li></ul><h2 id="effect" tabindex="-1"><a class="header-anchor" href="#effect" aria-hidden="true">#</a> effect</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> effect<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/reactivity&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// \u4F7F\u7528 reactive() \u51FD\u6570\u5B9A\u4E49\u54CD\u5E94\u5F0F\u6570\u636E</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// \u4F7F\u7528 effect() \u51FD\u6570\u5B9A\u4E49\u526F\u4F5C\u7528\u51FD\u6570</span>\n<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerText <span class="token operator">=</span> obj<span class="token punctuation">.</span>text<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u4E00\u79D2\u540E\u4FEE\u6539\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u8FD9\u4F1A\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  obj<span class="token punctuation">.</span>text <span class="token operator">+=</span> <span class="token string">&#39; world&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><ul><li>reactive() \u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\u3002</li><li>effect() \u51FD\u6570\u7528\u4E8E\u5B9A\u4E49\u526F\u4F5C\u7528\uFF0C\u5B83\u7684\u53C2\u6570\u5C31\u662F\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u53EF\u80FD\u4F1A\u4EA7\u751F\u526F\u4F5C\u7528\uFF0C\u4F8B\u5982\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 <code>document.body.innerText = obj.text</code>\u3002\u5728\u526F\u4F5C\u7528\u51FD\u6570\u5185\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u4F1A\u4E0E\u526F\u4F5C\u7528\u51FD\u6570\u4E4B\u95F4\u5EFA\u7ACB\u8054\u7CFB\uFF0C\u5373\u6240\u8C13\u7684\u4F9D\u8D56\u6536\u96C6\uFF0C\u5F53\u54CD\u5E94\u5F0F\u6570\u636E\u53D8\u5316\u4E4B\u540E\uFF0C\u4F1A\u5BFC\u81F4\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u3002</li></ul><h3 id="\u8C03\u5EA6\u6267\u884C-effect-scheduler" tabindex="-1"><a class="header-anchor" href="#\u8C03\u5EA6\u6267\u884C-effect-scheduler" aria-hidden="true">#</a> \u8C03\u5EA6\u6267\u884C effect-scheduler</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\n</code></pre></div><p>console.log \u8BED\u53E5\u5171\u6253\u5370\u56DB\u6B21\uFF08\u5305\u62EC\u9996\u6B21\u6267\u884C\uFF09</p><p>\u5047\u5982\u6211\u4EEC\u53EA\u9700\u8981\u628A\u6570\u636E\u7684\u6700\u7EC8\u7684\u72B6\u6001\u5E94\u7528\u5230\u526F\u4F5C\u7528\u4E2D\uFF0C\u800C\u4E0D\u662F\u6BCF\u6B21\u53D8\u5316\u90FD\u91CD\u65B0\u6267\u884C\u4E00\u6B21\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u8FD9\u5C06\u5BF9\u6027\u80FD\u6709\u6240\u63D0\u5347\u3002\u5B9E\u9645\u4E0A\u6211\u4EEC\u53EF\u4EE5\u4E3A effect \u4F20\u9012\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F5C\u4E3A\u9009\u9879\uFF0C\u53EF\u4EE5\u6307\u5B9A\u201C\u8C03\u5EA6\u5668\u201D\u3002\u6240\u8C13\u8C03\u5EA6\u5668\u5C31\u662F\u7528\u6765\u6307\u5B9A\u5982\u4F55\u8FD0\u884C\u526F\u4F5C\u7528\u51FD\u6570\u7684\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">effect</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token comment">// \u6307\u5B9A\u8C03\u5EA6\u5668\u4E3A queueJob</span>\n    scheduler<span class="token operator">:</span> queueJob<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u8C03\u5EA6\u5668\u5B9E\u73B0</span>\n<span class="token keyword">const</span> queue<span class="token operator">:</span> Function<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> isFlushing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">queueJob</span><span class="token punctuation">(</span><span class="token function-variable function">job</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFlushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    isFlushing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> fn<span class="token punctuation">;</span>\n      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\n</code></pre></div><p>\u6700\u7EC8\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\u526F\u4F5C\u7528\u51FD\u6570\u3002\u8FD9\u5B9E\u9645\u4E0A\u5C31\u662F watchEffect() \u51FD\u6570\u7684\u5B9E\u73B0\u601D\u8DEF\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nobj<span class="token punctuation">.</span>foo<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>foo<span class="token operator">++</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">.</span>foo<span class="token operator">++</span><span class="token punctuation">;</span>\n</code></pre></div><p>\u8FD9\u4E0E\u6211\u4EEC\u4E0A\u9762\u521A\u521A\u5B9E\u73B0\u7684\u81EA\u5B9A\u4E49\u8C03\u5EA6\u5668\u7684 effect \u7684\u6548\u679C\u5B9E\u9645\u4E0A\u662F\u4E00\u6837\u7684\u3002</p><h3 id="watcheffect-\u4E0E-effect-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#watcheffect-\u4E0E-effect-\u7684\u533A\u522B" aria-hidden="true">#</a> watchEffect() \u4E0E effect() \u7684\u533A\u522B</h3><ul><li>effect() \u51FD\u6570\u6765\u81EA\u4E8E @vue/reactivity \uFF0C\u800C watchEffect() \u51FD\u6570\u6765\u81EA\u4E8E @vue/runtime-core\u3002</li><li>\u5B83\u4EEC\u7684\u533A\u522B\u5728\u4E8E\uFF1Aeffect() \u662F\u975E\u5E38\u5E95\u5C42\u7684\u5B9E\u73B0\uFF0CwatchEffect() \u662F\u57FA\u4E8E effect() \u7684\u5C01\u88C5\u3002</li><li>watchEffect() \u4F1A\u7EF4\u62A4\u4E0E\u7EC4\u4EF6\u5B9E\u4F8B\u4EE5\u53CA\u7EC4\u4EF6\u72B6\u6001(\u662F\u5426\u88AB\u5378\u8F7D\u7B49)\u7684\u5173\u7CFB\uFF0C\u5982\u679C\u4E00\u4E2A\u7EC4\u4EF6\u88AB\u5378\u8F7D\uFF0C\u90A3\u4E48 watchEffect() \u4E5F\u5C06\u88AB stop\uFF0C\u4F46 effect() \u5219\u4E0D\u4F1A\u3002</li></ul><p>\u53C2\u8003\uFF1A</p>', 48);
const _hoisted_66 = {
  href: "https://zhuanlan.zhihu.com/p/146097763",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_67 = /* @__PURE__ */ createTextVNode("\u6DF1\u5165\u7406\u89E3 Vue3 Reactivity API");
function _sfc_render(_ctx, _cache) {
  const _component_RouterLink = resolveComponent("RouterLink");
  const _component_OutboundLink = resolveComponent("OutboundLink");
  return openBlock(), createElementBlock(Fragment, null, [
    _hoisted_1,
    createBaseVNode("nav", _hoisted_2, [
      createBaseVNode("ul", null, [
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#reactive" }, {
            default: withCtx(() => [
              _hoisted_3
            ]),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#ref" }, {
            default: withCtx(() => [
              _hoisted_4
            ]),
            _: 1
          })
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#computed" }, {
            default: withCtx(() => [
              _hoisted_5
            ]),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u7528\u6CD5" }, {
                default: withCtx(() => [
                  _hoisted_6
                ]),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#watch" }, {
            default: withCtx(() => [
              _hoisted_7
            ]),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u89C2\u5BDF-props" }, {
                default: withCtx(() => [
                  _hoisted_8
                ]),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u89C2\u5BDF\u5305\u88C5\u5BF9\u8C61" }, {
                default: withCtx(() => [
                  _hoisted_9
                ]),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u89C2\u5BDF\u591A\u4E2A\u6570\u636E\u6E90" }, {
                default: withCtx(() => [
                  _hoisted_10
                ]),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u505C\u6B62\u89C2\u5BDF" }, {
                default: withCtx(() => [
                  _hoisted_11
                ]),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u6E05\u7406\u526F\u4F5C\u7528" }, {
                default: withCtx(() => [
                  _hoisted_12
                ]),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#watcheffect" }, {
            default: withCtx(() => [
              _hoisted_13
            ]),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#watch-\u548C-watcheffect-\u7684\u533A\u522B" }, {
                default: withCtx(() => [
                  _hoisted_14
                ]),
                _: 1
              })
            ])
          ])
        ]),
        createBaseVNode("li", null, [
          createVNode(_component_RouterLink, { to: "#effect" }, {
            default: withCtx(() => [
              _hoisted_15
            ]),
            _: 1
          }),
          createBaseVNode("ul", null, [
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#\u8C03\u5EA6\u6267\u884C-effect-scheduler" }, {
                default: withCtx(() => [
                  _hoisted_16
                ]),
                _: 1
              })
            ]),
            createBaseVNode("li", null, [
              createVNode(_component_RouterLink, { to: "#watcheffect-\u4E0E-effect-\u7684\u533A\u522B" }, {
                default: withCtx(() => [
                  _hoisted_17
                ]),
                _: 1
              })
            ])
          ])
        ])
      ])
    ]),
    _hoisted_18,
    createBaseVNode("ul", null, [
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_66, [
          _hoisted_67,
          createVNode(_component_OutboundLink)
        ])
      ])
    ])
  ], 64);
}
var reactivityAPI_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { reactivityAPI_html as default };
